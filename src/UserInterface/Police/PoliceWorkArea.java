/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Police;

import DisasterMgmtSystem.AppUserAccount.AppUserAccount;
import DisasterMgmtSystem.DisasterMgmtSystem;
import DisasterMgmtSystem.Emergencies.Emergency;
import DisasterMgmtSystem.Enterprise.AmbulanceAdminEnterprise;
import DisasterMgmtSystem.Enterprise.Enterprise;
import static DisasterMgmtSystem.Enterprise.Enterprise.EnterpriseType.AmbulanceAdminEnterprise;
import DisasterMgmtSystem.Network.Network;
import DisasterMgmtSystem.SOSWaitList.PoliceWaitList;
import DisasterMgmtSystem.SOSWaitList.SOSWaitList;
import DisasterMgmtSystem.SOSWaitList.SOSWorkRequest;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Utilities.GoogleMapsAPIUtils;

/**
 *
 * @author hs_sa
 */
public class PoliceWorkArea extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private DisasterMgmtSystem system;
    private AppUserAccount account;
    private Network network;
    private Enterprise enterprise;
    private Emergency e;
    private boolean flag = false;
    private boolean enableFlag = false;
    private String location;
    private boolean value = false;
    private boolean ambulanceIdAlreadyPresent;
    private boolean ambulanceUserNameAlreadyPresent;
    private boolean ambulanceStationAlreadyPresent;
    ImageIcon profilePicImage;
    private boolean ambulanceHasUserName;

    /**
     * Creates new form PoliceWorkArea
     */
    public PoliceWorkArea(JPanel userProcessContainer, AppUserAccount account, DisasterMgmtSystem emergencysystem, Network network, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = emergencysystem;
        this.account = account;
        this.network = network;
        this.enterprise = enterprise;
        setVisibilityForm(flag);
        populateTable();
    }
    
    public void setVisibilityForm(boolean flag) {

        emergencyLocationLabel.setVisible(flag);
        emergencyLocationTF.setVisible(flag);
        natureOfEmergencyLabel.setVisible(flag);
        natureOfEmergencyTF.setVisible(flag);
        timeRecorderLabel.setVisible(flag);
        timeTF.setVisible(flag);

    }

    public void enableFields(boolean enableflag) {
        emergencyLocationTF.setEnabled(enableflag);
        natureOfEmergencyTF.setEnabled(enableflag);
    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) emergencyTable.getModel();

        model.setRowCount(0);

        for (SOSWorkRequest workRequest : account.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[6];

            row[0] = ((PoliceWaitList) workRequest).getEmergency().getCallersPhoneNumber();
            row[1] = ((PoliceWaitList) workRequest).getEmergency();
            row[2] = ((PoliceWaitList) workRequest).getEmergency().getNatureOfEmergency();
            row[3] = ((PoliceWaitList) workRequest).getEmergency().getPriority();
            row[4] = ((PoliceWaitList) workRequest).getEmergency().getReportedTime();
            row[5] = workRequest;
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        emergencyListPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emergencyTable = new javax.swing.JTable();
        viewIncident = new javax.swing.JButton();
        emergencyLocationLabel = new javax.swing.JLabel();
        natureOfEmergencyLabel = new javax.swing.JLabel();
        timeRecorderLabel = new javax.swing.JLabel();
        emergencyLocationTF = new javax.swing.JTextField();
        natureOfEmergencyTF = new javax.swing.JTextField();
        timeTF = new javax.swing.JTextField();
        locateBtn = new javax.swing.JButton();
        imgLicense = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        processTheEmrgBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        header.setText("Police work area");
        add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, -1));

        emergencyListPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        emergencyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reporter Phone", "Location of emergency", "Condition of Injured", "Priority", "Reported Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(emergencyTable);

        viewIncident.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        viewIncident.setText(" View Incident");
        viewIncident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewIncidentActionPerformed(evt);
            }
        });

        emergencyLocationLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        emergencyLocationLabel.setText("Emergency location:");

        natureOfEmergencyLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        natureOfEmergencyLabel.setText("Condition of injured");

        timeRecorderLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        timeRecorderLabel.setText("Time at which emergency was recorded:");

        emergencyLocationTF.setEnabled(false);

        natureOfEmergencyTF.setEnabled(false);

        timeTF.setEnabled(false);

        locateBtn.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        locateBtn.setText("View on Map");
        locateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locateBtnActionPerformed(evt);
            }
        });

        imgLicense.setBackground(new java.awt.Color(241, 239, 255));

        jButton1.setText("View Injured Info");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        processTheEmrgBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        processTheEmrgBtn.setText("Route to Ambulance");
        processTheEmrgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processTheEmrgBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout emergencyListPanelLayout = new javax.swing.GroupLayout(emergencyListPanel);
        emergencyListPanel.setLayout(emergencyListPanelLayout);
        emergencyListPanelLayout.setHorizontalGroup(
            emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emergencyListPanelLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(emergencyListPanelLayout.createSequentialGroup()
                        .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(natureOfEmergencyLabel)
                            .addComponent(emergencyLocationLabel)
                            .addComponent(timeRecorderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(emergencyListPanelLayout.createSequentialGroup()
                                .addComponent(imgLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(jButton1))
                            .addGroup(emergencyListPanelLayout.createSequentialGroup()
                                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(timeTF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emergencyLocationTF, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(natureOfEmergencyTF))
                                .addGap(45, 45, 45)
                                .addComponent(locateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(emergencyListPanelLayout.createSequentialGroup()
                        .addComponent(processTheEmrgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(249, 249, 249)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(emergencyListPanelLayout.createSequentialGroup()
                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emergencyListPanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(emergencyListPanelLayout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(viewIncident, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        emergencyListPanelLayout.setVerticalGroup(
            emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emergencyListPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewIncident)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emergencyLocationLabel)
                    .addComponent(emergencyLocationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locateBtn))
                .addGap(23, 23, 23)
                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(natureOfEmergencyLabel)
                    .addComponent(natureOfEmergencyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeRecorderLabel)
                    .addComponent(timeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(emergencyListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(processTheEmrgBtn)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        add(emergencyListPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewIncidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIncidentActionPerformed
        // TODO add your handling code here:
        int rowNumber = emergencyTable.getSelectedRow();

        if (rowNumber >= 0) {
            
            e = (Emergency) emergencyTable.getValueAt(rowNumber, 1);
            setVisibilityForm(true);
            emergencyLocationTF.setText(e.getLocationOfEmergency());
            natureOfEmergencyTF.setText(e.getDescription());
            timeTF.setText(e.getReportedTime().toString());
            //imgLicense.setIcon(e.getLicensePlateLogo());
//            if(imgLicense== null){
//                //profilePicImage = new ImageIcon(e.getLicensePlateLogoUrl());
//                profilePicImage = new ImageIcon(profilePicImage.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH));  //a
//                imgLicense.setIcon(profilePicImage);
//            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewIncidentActionPerformed

    private void locateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locateBtnActionPerformed
        // TODO add your handling code here:
        GoogleMapsAPIUtils.locateAddress(emergencyLocationTF.getText() + "");
    }//GEN-LAST:event_locateBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int rowNumber = emergencyTable.getSelectedRow();

        if (rowNumber >= 0) {
            e = (Emergency) emergencyTable.getValueAt(rowNumber, 1);
            RetrieveVictimInformationPopUp popup = new RetrieveVictimInformationPopUp(this.userProcessContainer, this.account, this.system, this.network, this.enterprise, e);
            popup.setBounds(800, 800, 800, 800);
            JOptionPane jop = new JOptionPane();
            JDialog dialog = jop.createDialog("Injured Person Details");
            dialog.setSize(900, 900);
            dialog.setContentPane(popup);
            dialog.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void processTheEmrgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processTheEmrgBtnActionPerformed
        // TODO add your handling code here:
        int rowNumber = emergencyTable.getSelectedRow();

        if (rowNumber >= 0) {
            Emergency emergencySelected = (Emergency) emergencyTable.getValueAt(rowNumber, 1);
            if (emergencySelected.getEmergencyContact() == "") {
                JOptionPane.showMessageDialog(this, "Please verify person details before routing.", "WARNING", JOptionPane.WARNING_MESSAGE);
                return;
            }
            for (Network n : system.getNetworkList()) {
                for (Enterprise ent : n.getEntDirObj().getEnterpriseList()) {
                    if (ent instanceof AmbulanceAdminEnterprise) {
                        for (AppUserAccount userAcc : ent.getUserAccountDirectory().getUserAccountList()) {
                            PoliceWaitList request = new PoliceWaitList();
                            request.setEmployee(ent.getEmployeeDirectory().getEmployeeList().get(0));
                            request.setEmergency(emergencySelected);
                            emergencySelected.setEmergencyStatus("Assigned to Ambulance");
                            request.setReceiver(userAcc);
                            userAcc.getWorkQueue().getWorkRequestList().add(request);
                            request.setEmployee(account.getEmployee());
                            request.setEmergency(emergencySelected);
                            request.setReceiver(account);
                            request.setSender(account);
                            account.getWorkQueue().getWorkRequestList().add(request);
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Emergency Routed to Ambulance Admin", "INFO", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from the table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_processTheEmrgBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel emergencyListPanel;
    private javax.swing.JLabel emergencyLocationLabel;
    private javax.swing.JTextField emergencyLocationTF;
    private javax.swing.JTable emergencyTable;
    private javax.swing.JLabel header;
    private javax.swing.JLabel imgLicense;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton locateBtn;
    private javax.swing.JLabel natureOfEmergencyLabel;
    private javax.swing.JTextField natureOfEmergencyTF;
    private javax.swing.JButton processTheEmrgBtn;
    private javax.swing.JLabel timeRecorderLabel;
    private javax.swing.JTextField timeTF;
    private javax.swing.JButton viewIncident;
    // End of variables declaration//GEN-END:variables
}
