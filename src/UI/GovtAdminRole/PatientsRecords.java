/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.GovtAdminRole;

import EcoSystem.EcoSystem;
import EcoSystem.Government.Municipality;
import EcoSystem.Patient.Patient;
import EcoSystem.Patient.PatientDirectory;
import EcoSystem.UserAccount.UserAccount;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.CardLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shriyadikshith
 */
public class PatientsRecords extends javax.swing.JPanel {

    /**
     * Creates new form PatientsRecords
     */
    
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAccount;
    Municipality government;
    
    public PatientsRecords(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = userAccount;
        government = (Municipality)userAccount;
        initComponents();
        populateTable();
        
    }
    
    private void populateTable() {
        PatientDirectory patientDirectory = ecosystem.getPatientDirectory();
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
       
        model.setRowCount(0);
        
        for (var patient : patientDirectory.getPatientList()) {
                    Object[] row = new Object[12];
                    row[0] = patient.getUsername();
                    row[1] = patient.getPassword();
                    row[2] = patient.getPhone();
                    row[3] = patient.getAddress();
                    row[4] = patient.getHeartRate();
                    row[5] = patient.getBloodPressure();
                    row[6] = patient.getAge();
                    row[7] = patient.getHeight();
                    row[8] = patient.getWeight();
                    row[9] = patient.getOxygenlevel();
                    row[10] = patient.getSeverity();
                    row[11] = patient.getEmail();
                    model.addRow(row);
                
        }
    }
    
    private void print() {
        try {
            Document doc = new Document();
            PdfWriter.getInstance(doc, new FileOutputStream("/Users/hs_sa/Report.pdf"));
            doc.open();
            PdfPTable pdfTable = new PdfPTable(tblMenu.getColumnCount());
            //adding table headers
            for (int i = 0; i < tblMenu.getColumnCount(); i++) {
                pdfTable.addCell(tblMenu.getColumnName(i));
            }
            //extracting data from the JTable and inserting it to PdfPTable
            for (int rows = 0; rows < tblMenu.getRowCount(); rows++) {
                for (int cols = 0; cols < tblMenu.getColumnCount(); cols++) {
                    pdfTable.addCell(tblMenu.getModel().getValueAt(rows, cols).toString());

                }
            }
            doc.add(pdfTable);
            doc.close();
            System.out.println("done");
        } catch (DocumentException | FileNotFoundException ex) {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnback = new javax.swing.JButton();
        btngeneratereports = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();

        setBackground(new java.awt.Color(166, 203, 230));

        btnback.setBackground(new java.awt.Color(97, 147, 160));
        btnback.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnback.setText("BACK");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btngeneratereports.setBackground(new java.awt.Color(97, 147, 160));
        btngeneratereports.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btngeneratereports.setText("GENERATE REPORTS");
        btngeneratereports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngeneratereportsActionPerformed(evt);
            }
        });

        tblMenu.setFont(new java.awt.Font("Garamond", 0, 14)); // NOI18N
        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT NAME", "PATIENT PASSWORD", "CONTACT", "ADDRESS", "HEART RATE", "BLOOD PRESSURE", "AGE", "HEIGHT", "WEIGHT", "OXYGEN LEVEL", "SEVERITY", "EMAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMenu.setShowGrid(false);
        jScrollPane1.setViewportView(tblMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btngeneratereports, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btngeneratereports, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btngeneratereportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngeneratereportsActionPerformed
        // TODO add your handling code here:
        
        print();
       JOptionPane.showMessageDialog(this, "Report generated at Desktop. Please check !");
    }//GEN-LAST:event_btngeneratereportsActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        
        Govtadmin adminWorkAreaJPanel = new Govtadmin(userProcessContainer,userAccount, ecosystem);
        userProcessContainer.add("AdminWorkAreaJPanel", adminWorkAreaJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnbackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btngeneratereports;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMenu;
    // End of variables declaration//GEN-END:variables
}


